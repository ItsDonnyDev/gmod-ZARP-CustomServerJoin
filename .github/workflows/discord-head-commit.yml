name: Discord push

on:
  push:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Post each commit (plus merge head)
        env:
          WEBHOOK:        ${{ secrets.DISCORD_NOTIFY }}
          REPO:           ${{ github.repository }}
          BRANCH:         ${{ github.ref_name }}
          COMMITS_JSON:   ${{ toJson(github.event.commits) }}
          HEAD_JSON:      ${{ toJson(github.event.head_commit) }}
          ACTOR_FALLBACK: ${{ github.actor }}
        shell: bash
        run: |
          set -euo pipefail

          echo "${COMMITS_JSON:-[]}" > commits.json
          head_id=$(echo "${HEAD_JSON:-null}" | jq -r '.id // empty' || true)

          # Ensure head_commit is present exactly once
          if [ -n "$head_id" ] && ! jq -e --arg id "$head_id" 'map(.id) | index($id)' commits.json >/dev/null; then
            jq -c --argjson head "${HEAD_JSON:-{}}" '. + [$head]' commits.json > commits2.json && mv commits2.json commits.json
          fi

          # Sort chronologically
          jq -c 'sort_by(.timestamp // "")' commits.json > commits_sorted.json

          repo_short=$(echo "$REPO" | awk -F/ '{print ($2?$2:$0)}')

          last_id=""
          jq -c '.[] | {id, message, timestamp, author}' commits_sorted.json | while read -r c; do
            id=$(echo "$c" | jq -r '.id // empty')
            [ -n "$id" ] && [ "$id" = "$last_id" ] && continue
            last_id="$id"

            msg=$(echo "$c" | jq -r '.message // ""')
            ts=$(echo "$c" | jq -r '.timestamp // empty')
            login=$(echo "$c" | jq -r '.author.username // empty')
            [ -z "$login" ] && login="$ACTOR_FALLBACK"

            # Dynamic footer: Today H:MM or DD/MM/YYYY H:MM (commit's timezone)
            c_date=$(date -u -d "$ts" +"%Y-%m-%d")
            n_date=$(date -u +"%Y-%m-%d")
            time_str=$(date -d "$ts" +"%-H:%M")
            if [ "$c_date" = "$n_date" ]; then
              foot_extra="Today $time_str"
            else
              date_str=$(date -d "$ts" +"%d/%m/%Y")
              foot_extra="$date_str $time_str"
            fi
            iso_utc=$(date -u -d "$ts" +"%Y-%m-%dT%H:%M:%SZ")

            jq -n \
              --arg appicon "${APP_ICON_URL}" \
              --arg login "$login" \
              --arg msg "$msg" \
              --arg repo "$repo_short" \
              --arg branch "$BRANCH" \
              --arg foot "$repo_short - $BRANCH â€¢ $foot_extra" \
              --arg iso "$iso_utc" \
              '{
                username: "GitHub",
                avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
                embeds: [{
                  color: 0x2F81F7,
                  author: {
                    name: $login,
                    url: ("https://github.com/" + $login),
                    icon_url: ("https://avatars.githubusercontent.com/" + $login)
                  },
                  description: $msg,
                  footer: { text: $foot },
                  timestamp: $iso
                }]
              }' \
            | curl -fsS -H 'Content-Type: application/json' -d @- "$WEBHOOK" >/dev/null
          done
